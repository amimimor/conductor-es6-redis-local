diff --git a/build.gradle b/build.gradle
index 6e7ea49..5e951a8 100644
--- a/build.gradle
+++ b/build.gradle
@@ -45,7 +45,7 @@ subprojects {
 apply from: "$rootDir/dependencies.gradle"
 
 // change the ES version used by Spring Boot Dependency Management plugin
-ext['elasticsearch.version'] = revElasticSearch6
+ext['elasticsearch.version'] = revElasticSearch7
 
 allprojects {
     apply plugin: 'nebula.netflixoss'
diff --git a/docker/docker-compose.yaml b/docker/docker-compose.yaml
index 8b665b0..154ed5d 100644
--- a/docker/docker-compose.yaml
+++ b/docker/docker-compose.yaml
@@ -44,7 +44,7 @@ services:
     stdin_open: true
 
   elasticsearch:
-    image: elasticsearch:6.8.15
+    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
     environment:
       - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
       - transport.host=0.0.0.0
diff --git a/server/build.gradle b/server/build.gradle
index 2b6297f..0c68eb2 100644
--- a/server/build.gradle
+++ b/server/build.gradle
@@ -24,7 +24,7 @@ dependencies {
     implementation project(':conductor-cassandra-persistence')
     implementation project(':conductor-postgres-persistence')
     implementation project(':conductor-mysql-persistence')
-    implementation project(':conductor-es6-persistence')
+    implementation project(':conductor-es7-persistence')
     implementation(project(path: ':conductor-es7-persistence', configuration: 'shadow'))
     implementation project(':conductor-grpc-server')
     implementation project(':conductor-redis-lock')
diff --git a/server/src/main/resources/application.properties b/server/src/main/resources/application.properties
index d3ec09e..5099188 100644
--- a/server/src/main/resources/application.properties
+++ b/server/src/main/resources/application.properties
@@ -47,8 +47,7 @@ conductor.elasticsearch.url=localhost:9300
 conductor.elasticsearch.indexName=conductor
 
 #Elasticsearch major release version.
-conductor.elasticsearch.version=6
-#conductor.elasticsearch.version=7
+conductor.elasticsearch.version=7
 
 # Default event queue type to listen on for wait task
 conductor.default-event-queue.type=sqs
diff --git a/settings.gradle b/settings.gradle
index 2e4ec9a..ef62f16 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -44,7 +44,6 @@ include 'redis-persistence'
 include 'mysql-persistence'
 include 'postgres-persistence'
 
-include 'es6-persistence'
 include 'es7-persistence'
 
 include 'redis-lock'
diff --git a/test-harness/build.gradle b/test-harness/build.gradle
index 28911ab..dda2bd3 100644
--- a/test-harness/build.gradle
+++ b/test-harness/build.gradle
@@ -10,7 +10,7 @@ dependencies {
     testImplementation project(':conductor-mysql-persistence')
     testImplementation project(':conductor-postgres-persistence')
     testImplementation project(':conductor-cassandra-persistence')
-    testImplementation project(':conductor-es6-persistence')
+    testImplementation project(':conductor-es7-persistence')
     testImplementation project(':conductor-grpc-server')
     testImplementation project(':conductor-client')
     testImplementation project(':conductor-grpc-client')
diff --git a/test-harness/src/test/java/com/netflix/conductor/test/integration/AbstractEndToEndTest.java b/test-harness/src/test/java/com/netflix/conductor/test/integration/AbstractEndToEndTest.java
index 3feeafe..9205e21 100644
--- a/test-harness/src/test/java/com/netflix/conductor/test/integration/AbstractEndToEndTest.java
+++ b/test-harness/src/test/java/com/netflix/conductor/test/integration/AbstractEndToEndTest.java
@@ -48,7 +48,7 @@ import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
 
 @TestPropertySource(
-        properties = {"conductor.indexing.enabled=true", "conductor.elasticsearch.version=6"})
+        properties = {"conductor.indexing.enabled=true", "conductor.elasticsearch.version=7"})
 public abstract class AbstractEndToEndTest {
 
     private static final Logger log = LoggerFactory.getLogger(AbstractEndToEndTest.class);
@@ -61,8 +61,8 @@ public abstract class AbstractEndToEndTest {
 
     private static final ElasticsearchContainer container =
             new ElasticsearchContainer(
-                    DockerImageName.parse("docker.elastic.co/elasticsearch/elasticsearch-oss")
-                            .withTag("6.8.12")); // this should match the client version
+                    DockerImageName.parse("docker.elastic.co/elasticsearch/elasticsearch")
+                            .withTag("7.17.1")); // this should match the client version
 
     private static RestClient restClient;
 
